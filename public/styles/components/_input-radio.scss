$outer-circle-diameter: $ffs-body-assertive;
$inner-circle-diameter: space(md);

.bsds-input-radio {
  @include visually-hidden;
  pointer-events: none;

  + .bsds-input-radio-label {
    position: relative;
    vertical-align: middle;
    padding-left: calc(space(3x) + space(xs));
    cursor: pointer;

    &::before {
      position: absolute;
      top: calc((1.5em - $outer-circle-diameter) / 2);
      left: 0;
      width: $outer-circle-diameter;
      height: $outer-circle-diameter;
      border-radius: $border-radius-circle;
      border: $border-width-xxs solid $border-color-assertive;
      background: $neutral-100;
      content: '';
    }
  }

  [aria-invalid='true'] & {
    + .bsds-input-radio-label {
      &::before {
        border: $border-width-xs solid $border-color-error;
        background: $neutral-100;
      }
    }

    &:checked,
    &[aria-checked='true'] {
      + .bsds-input-radio-label {
        &::before {
          border: transparent;
          background: $feedback-error-40;
        }

        &::after {
          background: $neutral-100;
        }
      }
    }

    /* stylelint-disable scss/selector-nest-combinators */
    &:focus,
    &:focus:checked {
      /* stylelint-enable scss/selector-nest-combinators */
      + .bsds-input-radio-label {
        &::before {
          @include focus-invalid;
        }
      }
    }
  }

  &:checked,
  &[aria-checked='true'] {
    + .bsds-input-radio-label {
      &::before {
        border: transparent;
        background: $neutral-00;
      }

      &::after {
        position: absolute;
        top: calc((1.5em - $outer-circle-diameter) / 2);
        left: 0;
        width: $outer-circle-diameter;
        height: $outer-circle-diameter;
        border-radius: $border-radius-circle;
        background: $neutral-100;
        content: '';
        transform: scale(calc($inner-circle-diameter / $outer-circle-diameter));
      }
    }
  }

  /* stylelint-disable scss/selector-nest-combinators */
  &:focus,
  &:focus:checked {
    /* stylelint-enable scss/selector-nest-combinators */
    + .bsds-input-radio-label {
      &::before {
        @include focus-default;
      }
    }
  }

  &:disabled {
    + .bsds-input-radio-label {
      cursor: not-allowed;

      &::before {
        opacity: 1;
        border: $border-width-xxs solid $border-color-subtle;
        background: $neutral-95;
      }
    }

    &:checked,
    &[aria-checked='true'] {
      + .bsds-input-radio-label {
        &::after {
          background: $neutral-60;
        }
      }
    }
  }
}
