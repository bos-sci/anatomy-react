// TODO:
// move border and shadow classes to parent card instead of card content
// standardize markup so image and icon both render as a child of card and as a sibling of card content
// fix spacing:
// if no image/icon/border/shadow, no space above content or first child of content
// if icon/image but no border/shadow, 24px between image + first child of content
// if border/shadow, card content padding is 24px all around
// if tag, 12px between tag + title
// 16px between title + description, description + link
// fix styles: default, ghost, border-light, border-ghost

.bsds-card {
  @include bsds-defaults-type;
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  outline: 2px dashed $accent-primary-60;

  &-ghost {
    @extend .bsds-card;

    .bsds-icon-8x {
      path {
        fill: $neutral-100;
      }
    }

    .bsds-card-title,
    .bsds-card-description {
      color: $text-color-ghost;
    }
  }

  &-border-light {
    @extend .bsds-card;
    box-sizing: border-box;
    border: $border-width-xxs solid $border-color-subtle;
    padding: space(3x);
    background: $neutral-100;

    &.bsds-card-with-image {
      padding: 0;

      .bsds-card-content {
        margin-top: 0;
        padding: space(3x);

        &:not(:first-child) {
          border-top: $border-width-xxs solid $border-color-subtle;
        }
      }
    }
  }

  &-border-ghost {
    @extend .bsds-card-ghost;
    @extend .bsds-card-border-light;
    background: rgba($neutral-100, 0.2);
  }

  &-gradient {
    &:is(.bsds-card-border-light, .bsds-card-border-ghost) {
      &:not(.bsds-card-shadow) {
        &::before {
          bottom: 0;
          z-index: 1;
          opacity: 0;
          content: '';
          transition: opacity 0.4s linear;
          @include animated-gradient-brand;
          @include decorative-bar;
        }

        &:hover,
        &:focus {
          &::before {
            opacity: 1;
          }
        }
      }
    }
  }

  &-shadow {
    &:is(.bsds-card-border-light, .bsds-card-border-ghost) {
      &:not(.bsds-card-gradient) {
        box-shadow: $box-shadow-secondary;

        &:hover {
          box-shadow: $box-shadow-tertiary;
        }
      }
    }
  }
}

.bsds-card-with-image {
  .bsds-icon-8x {
    display: none;
  }
}

.bsds-card-content {
  &:not(:first-child) {
    margin-top: space(3x);
  }
}

[class*='bsds-tag'] {
  + .bsds-card-title {
    &.bsds-card-title {
      // TODO: temporarily increasing specificity while refactoring, reduce later
      margin-top: space(lg);
    }
  }

  // TODO: move this into product card
  + .bsds-product-card-ns-title {
    margin-top: space(lg);
  }
}

.bsds-tag-assertive {
  + .bsds-card-title {
    &.bsds-card-title {
      // TODO: temporarily increasing specificity while refactoring, reduce later
      // TODO: check with catie
      margin-top: space(3x);
    }
  }
}

.bsds-card-title {
  &.bsds-card-title {
    // TODO: temporarily increasing specificity while refactoring, reduce later
    margin-top: 0;
  }
}

.bsds-card-description {
  + .bsds-link {
    display: inline-block;
    margin-top: space(2x);
  }
}

[class*='bsds-card'] {
  [class*='bsds-tag'] {
    width: max-content;
  }

  &:not(.bsds-product-card) {
    [class*='bsds-card-title'] {
      ~ .bsds-card-description {
        z-index: 1;
      }
    }
  }
}

.link-hitbox {
  &::before {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 1;
    display: block;
    content: '';
  }

  &:focus {
    @include focus-default;
    width: max-content;
  }
}
