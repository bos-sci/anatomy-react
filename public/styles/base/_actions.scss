// NOTE: if we update button/link mixins, we'll also need to modify button-link and link-button overrides in _button.scss and _link.scss

@mixin button-hover {
  &:not([disabled]) {
    &:hover {
      border-color: transparent;
      background: $action-primary-20;
      color: $text-color-ghost;
      text-decoration: none;
      cursor: pointer;
    }
  }
}

@mixin button-active {
  &:not([disabled]) {
    border-color: transparent;
    background: $action-primary-20;
    color: $text-color-ghost;
  }
}

@mixin button-focus {
  &:not([disabled]) {
    &:focus {
      @include focus-default;
    }
  }
}

@mixin button-disabled {
  &[disabled] {
    border-color: $border-color-subtle;
    background: $neutral-95;
    color: $text-color-subtle;
    @include font-family-base-regular;
    cursor: not-allowed;
  }
}

@mixin button-base {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  border-radius: 0;
  border-width: $border-width-xs;
  border-style: solid;
  padding: space(lg) space(3x) 0.6875rem; // NOTE: this is a one-off size because space(lg) - space(xxs) was rounding up
  font-size: $ffs-body-assertive;
  line-height: inherit;
  text-align: center;
  @include font-family-base-heavy;

  .bsds-button-text {
    flex: 1;
    text-align: left;
  }

  &:active {
    @include button-active;
  }

  @include button-hover;

  &.bsds-button-small {
    // NOTE: typically this is defined in components/buttons, but that results in a lot of repetitive code. Let's revisit if/when we explore more button sizes & consider renaming this mixin.
    @include button-small;
  }
}

@mixin button-default {
  @include button-base;
  border-color: $border-color-action;
  background: $neutral-100;
  color: $text-color-action;
  @include font-family-base-heavy;
  @include button-focus;
  @include button-disabled;
}

@mixin button-subtle {
  @include link-default;
  border-color: transparent;
  padding: space(lg) space(3x) 0.6875rem;
  background: transparent;
  text-decoration: none;
  @include button-focus;
  @include button-disabled;

  &:not([disabled]) {
    &:disabled {
      border: 0;
      background: transparent;
    }

    &:hover {
      @include link-hover;
      color: $text-color-ghost;
    }
  }
}

@mixin button-assertive {
  @include button-base;
  border-color: transparent;
  background: $action-primary-40;
  color: $text-color-ghost;
  @include button-focus;
  @include button-disabled;
}

@mixin button-ghost-active {
  border-color: $border-color-ghost;
  background: rgba($neutral-100, 0.2);
}

@mixin button-ghost {
  @include button-base;
  border-color: $border-color-ghost;
  background: transparent;
  color: $text-color-ghost;

  &:not([disabled]) {
    &:hover,
    &:active {
      @include button-ghost-active;
    }

    &:focus {
      @include focus-ghost;
    }
  }

  &[disabled] {
    border-color: $neutral-60;
    background: transparent;
    color: $text-color-disabled;
    @include font-family-base-regular;
    cursor: not-allowed;
  }
}

@mixin button-icon {
  border-radius: $border-radius-circle;
  padding: calc(space(2x) + space(xxs));
}

@mixin button-small {
  @include font-size($fs-body-subtle);
  border-width: $border-width-xxs;
  padding: space(md) calc(space(lg) + space(xxs));
}

button {
  // Link buttons
  // This is not recommended -- we should use button styles on button elements, and link styles on link elements
  // NOTE: these will need to be updated if we modify the link mixin
  &[class*='bsds-link'] {
    border: 0;
    padding: 0;
    background: transparent;
    text-decoration: underline;

    &:not([disabled]) {
      &:hover,
      &:focus,
      &:active {
        background: transparent;
        text-decoration: underline;
      }
    }
  }

  &:not([disabled]) {
    &.bsds-link {
      &:hover,
      &:active {
        color: $text-color-primary;
      }
    }

    &.bsds-link-subtle {
      &:hover,
      &:active {
        color: $text-color-action;
      }
    }

    &.bsds-link-ghost {
      &:hover,
      &:active {
        color: $text-color-disabled;
      }

      :focus {
        @include focus-ghost;
      }
    }
  }
}

// Link Mixins
@mixin link-hover {
  text-decoration-thickness: space(xs);
  cursor: pointer;
}

@mixin link-default {
  color: $text-color-action;
  @include font-family-base-heavy;
  text-decoration: underline;

  &:visited {
    color: $accent-primary-30;
  }

  &:hover {
    color: $text-color-primary;
    @include link-hover;
  }

  &:active {
    color: $text-color-primary;
    text-decoration-thickness: space(xs);
  }

  &:focus {
    @include focus-default;
  }
}

@mixin link-subtle {
  color: $text-color-primary;
  @include font-family-base-heavy;
  text-decoration: underline;

  &:visited {
    color: $accent-primary-30;
  }

  &:hover {
    color: $text-color-action;
    @include link-hover;
  }

  &:active {
    color: $text-color-action;
    text-decoration-thickness: space(xs);
  }

  &:focus {
    @include focus-default;
  }
}

@mixin link-ghost {
  color: $text-color-ghost;
  @include font-family-base-heavy;
  text-decoration: underline;

  &:visited {
    color: $neutral-80;
  }

  &:hover {
    color: $text-color-disabled;
    @include link-hover;
  }

  &:active {
    color: $text-color-disabled;
    text-decoration-thickness: space(xs);
  }

  &:focus {
    @include focus-ghost;
  }
}

@mixin link-navigation {
  color: $text-color-primary;
  @include font-family-base-regular;
  text-decoration: none;

  &:visited {
    color: $text-color-primary;
  }

  &:hover {
    color: $text-color-primary;
    text-decoration: underline;
  }

  &:active {
    color: $text-color-primary;
    text-decoration: underline;
  }

  &.is-active {
    @include font-family-base-heavy;
  }
}
